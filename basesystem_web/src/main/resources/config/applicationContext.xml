<?xml version="1.0" encoding="utf-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xsi:schemaLocation="  
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"  
            default-autowire="byName" default-lazy-init="false"> 
    
  <!--本示例采用DBCP连接池，应预先把DBCP的jar包复制到工程的lib目录下。 -->   
    <!--<context:property-placeholder	location="classpath:service.properties" />-->
	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"-->
		<!--destroy-method="close" p:driverClassName="com.mysql.jdbc.Driver"-->
		<!--p:url="${jdbc.url}" -->
		<!--p:username="${jdbc.username}" p:password="${jdbc.password}"-->
		<!--p:maxActive="10" p:maxIdle="10">-->
	<!--</bean>-->

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:server.properties</value>
            </list>
        </property>
    </bean>


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url">
            <!--<value>${database_url}</value>-->
            <value>jdbc:mysql://127.0.0.1:3306/my_car?characterEncoding=utf8</value>
        </property>
        <property name="username">
            <!--<value>${database_username}</value>-->
            <value>root</value>
        </property>
        <property name="password">
            <!--<value>${database_password}</value>-->
            <value>admin</value>
        </property>
        <property name="initialSize">
            <value>10</value>
        </property>
        <!-- The maximum number of active connections that can be allocated from
            this pool at the same time, or zero for no limit. -->
        <property name="maxActive">
            <value>100</value>
        </property>
        <!-- The maximum number of milliseconds that the pool will wait (when there
            are no available connections) for a connection to be returned before throwing
            an exception, or -1 to wait indefinitely. -->
        <property name="maxWait">
            <value>120000</value>
        </property>

        <!-- The maximum number of active connections that can remain idle in the
            pool, without extra ones being released, or zero for no limit. -->
        <property name="maxIdle">
            <value>10</value>
        </property>

        <!-- The minimum number of active connections that can remain idle in the
            pool, without extra ones being created, or zero to create none. -->
        <property name="minIdle">
            <value>10</value>
        </property>

        <!-- Enable prepared statement pooling for this pool. -->
        <property name="poolPreparedStatements">
            <value>false</value>
        </property>

        <!-- The maximum number of open statements that can be allocated from the
            statement pool at the same time, or zero for no limit. -->
        <property name="maxOpenPreparedStatements">
            <value>0</value>
        </property>
        <property name="validationQuery">
            <value>select 1</value>
            <!-- <value>select now()</value> -->
        </property>
        <property name="testOnBorrow">
            <value>true</value>
        </property>
        <property name="testOnReturn">
            <value>false</value>
        </property>
        <property name="defaultAutoCommit" value="true" />
    </bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource" />
	</bean>
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
     <!--dataSource属性指定要用到的连接池--> 
     <property name="dataSource" ref="dataSource"/> 
     <!-- 所有配置的mapper文件 -->
     <property name="mapperLocations" value="classpath*:/mapper/*.xml" />
  </bean> 
  
   <!--MapperScannerConfigurer配置-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!--basePackage指定要扫描的包，在此包之下的映射器都会被
	搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
	 <property name="basePackage" value="org.car.system.dao;org.car.common.dao" />	 
  </bean>
</beans> 